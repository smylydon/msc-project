"use strict";window.parser=function(){function t(t){for(var n,r=[];null!==(n=Y.exec(t));)r.push(n[0]);return r}function n(){return N[D]}function r(){var t=n();return D++,t}function e(t,n){return D++,{token:t,type:n}}function u(){var t={},r=n();return A.test(r)?(t=e(r,"unary"),t.right=c()):O.test(r)?t=e(r,"number"):/^\($/.test(r)?(t=e(r,"leftparen"),t.left=c(),r=n(),")"===r&&(t.right=e(r,"rightparen"))):t=v.test(r)?e(r,"cellname"):e(r,""),t}function o(t,e){for(var u=e(),o=n();t(o);)o=r(),u={token:o,type:"operator",left:u,right:e()},o=n();return u}function i(){return o(function(t){return"*"===t||"/"===t||"^"===t},u)}function c(){return o(function(t){return"+"===t||"-"===t},i)}function a(t){return String.fromCharCode(t.charCodeAt(0)+1)}function f(t,n,r){return t=t.replace(/^\+/,""),t="("+t+")","mean"===n&&(t="("+t+"/"+r+")"),t}function s(t){var n,r="",e="",u="",o="",i=0,c="#ERROR",s=/sum/i.test(t)?"sum":"mean",l=function(t,n){for(c="";t();)c+="+"+r+u,n(),i++;c=f(c,s,i)};return t=t.replace(/(sum|avg|mean|[\(\)]+)/gi,"").replace(" ",""),n=t.split(":"),r=n[0][0],e=n[1][0],u=parseInt(n[0][1]),o=parseInt(n[1][1]),r===e?o>=u&&l(function(){return u<=o},function(){u++}):e>=r&&o===u&&l(function(){return r<=e},function(){r=a(r)}),console.log(">>>",c),c}function l(t){m=t||m}function p(t){E=t||E}function R(t,n){l(t),p(n)}function g(t,n){var r=m.getCellById(n),e=r.formula;if(y.test(e))if(t.indexOf(n)<0){var u=[r.id];Array.prototype.push.apply(u,t),n=e.replace(y,d(g,u))}else console.log("#ERROR CYCULAR DEPENDENCY",n,t),n="#ERROR CYCULAR DEPENDENCY";var o=n.match(Y);return n=o&&o.length>1?"("+n+")":n}function d(){var t=Array.prototype.slice.call(arguments),n=t.shift();return function(){return n.apply(n,t.concat(Array.prototype.slice.call(arguments)))}}function C(n,r){return n=n||"",D=0,n=n.replace(h,s),n=n.replace(y,d(g,[r])),/ERROR/gi.test(n)?n=/CIRCULAR/gi.test(n)?"#ERROR CYCULAR DEPENDENCY":"#ERROR":(console.log("tokenize:",n),N=t(n),n=c()),n}var E,m,h=/(sum|avg|mean)\(\s*[a-z]([1-9]\d+|[1-9])\s*:\s*[a-z]([1-9]\d+|[1-9])\s*\)/gi,v=/^[A-Z]([1-9]\d+|[1-9])$/i,y=/[A-Z]([1-9]\d+|[1-9])/gi,A=/[+\-\/\*\^]/,O=/^\d+(\.\d+)?$/,D=0,N=[],Y=/([A-Z]([1-9]\d+|[1-9])|\d+(\.\d+)?|[+\-\/\*\^]|\(|\))/gi;return{init:R,parse:C,setSocket:p,setSpreadSheet:l}}();
//# sourceMappingURL=parser.js.map
