{"version":3,"sources":["spreadsheet.js"],"names":["processElements","socketUpdate","socketMessage","INPUTS","each","index","elem","updateCell","cell","element","value","val","localStorage","id","formula","pusher","add","a","b","minus","multiply","divide","fetchAndCombine","token","combiner","right","left","calculate","Bacon","constant","combine","console","log","type","parseFloat","spreadSheet","getCellById","bus","$","model","attr","cells","push","filter","data","onValue","toUpperCase","charAt","window","parser","substring","total","x","isNaN","asEventStream","event","elementid","target","map","user_id","userId","socket","emit","addCells","_","Cell","_this","this","Bus","SpreadSheetFactory","SpreadSheet","prototype","find","isArray","Array","apply","addCell","removeCellsById","ids","forEach","remove","removeCellById","getSpreadSheet","i","row","document","querySelector","insertRow","j","letter","String","fromCharCode","charCodeAt","insertCell","innerHTML","io","connect","on","fromBinder","sink"],"mappings":"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","file":"spreadsheet.js","sourcesContent":["/* eslint-disable */\nvar _ = _;\nvar Bacon = Bacon;\n/* eslint-enable */\n\nvar Cell = function (cell) {\n  this.id = cell.id;\n  this.element = cell.element;\n  this.value = 0;\n  this.bus = new Bacon.Bus();\n\n  this.pusher = () => {\n    console.log('pushing:', this.value);\n    this.bus.push(this.value);\n  };\n\n  this.bus.onValue(function (value) {\n    console.log('value:', value);\n  });\n  this.pusher();\n};\n\nvar SpreadSheetFactory = (function () {\n  function SpreadSheet(cells) {\n    this.cells = [];\n    this.addCells(cells);\n  }\n\n  SpreadSheet.prototype.getCellById = function (id) {\n    return _.find(this.cells, {\n      id: id\n    });\n  };\n\n  SpreadSheet.prototype.addCells = function (cells) {\n    cells = _.isArray(cells) ? cells : [];\n    cells = cells.map(function (cell) {\n      return new Cell(cell);\n    });\n    Array.prototype.push.apply(this.cells, cells);\n  };\n\n  SpreadSheet.prototype.addCell = function (cell) {\n    this.cells.push(new Cell(cell));\n  };\n\n  SpreadSheet.prototype.removeCellsById = function (ids) {\n    ids = _.isArray(ids) ? ids : [];\n    _.forEach(ids, function (id) {\n      _.remove(this.cells, function (cell) {\n        return cell.id === id;\n      });\n    });\n  };\n\n  SpreadSheet.prototype.removeCellById = function (id) {\n    _.remove(this.cells, function (cell) {\n      return cell.id === id;\n    });\n  };\n\n  return {\n    getSpreadSheet: function (cells) {\n      return new SpreadSheet(cells);\n    }\n  };\n\n})();\n\nvar spreadSheet = SpreadSheetFactory.getSpreadSheet();\n\nfor (var i = 0; i < 6; i++) {\n  var row = document.querySelector(\"table\")\n    .insertRow(-1);\n  for (var j = 0; j < 6; j++) {\n    var letter = String.fromCharCode(\"A\".charCodeAt(0) + j - 1);\n    row.insertCell(-1)\n      .innerHTML = i && j ? \"<input id='\" + letter + i + \"'/>\" :\n      i || letter;\n  }\n}\n\n//var DATA = {};\n\nvar INPUTS = $('input'); //get all inputs\nvar cells = [];\n\nfunction processElements(socketUpdate, socketMessage) {\n  INPUTS.each(function (index, elem) {\n    var element = $(elem);\n    var model = {\n      element: element,\n      id: element.attr('id')\n    };\n\n    cells.push(model);\n\n    function updateCell(cell, element, value) {\n      cell.value = value;\n      element.val(cell.value);\n      localStorage[cell.id] = cell.formula;\n      cell.pusher();\n    }\n\n    socketUpdate.filter(function (data) {\n      return data.element === model.id;\n    }).onValue(function (data) {\n      var cell = spreadSheet.getCellById(data.element);\n      var value = data.formula.toUpperCase();\n      cell.formula = value;\n\n      if (value.charAt(0) === \"=\") {\n        value = window.parser(value.substring(1));\n        var total = calculate(value);\n        total.onValue(function (x) {\n          console.log('go update cell:', x);\n          updateCell(cell, element, x);\n        });\n      } else {\n        value = isNaN(parseFloat(value)) ? value : parseFloat(value);\n        updateCell(cell, element, value);\n      }\n\n    });\n\n    element.asEventStream('focus')\n      .onValue(function (event) {\n        var elementid = event.target.id;\n        var value = localStorage[elementid] || \"\";\n        element.val(value);\n      });\n\n    element.asEventStream('blur')\n      .map(function (event) {\n        var elementid = event.target.id;\n        var formula = event.target.value;\n        localStorage[elementid] = formula;\n        console.log('blurStream');\n        return {\n          element: elementid,\n          formula: formula,\n          user_id: userId\n        };\n      }).onValue(function (data) {\n        socket.emit('write', data);\n      });\n\n    function add(a, b) {\n      return a + b;\n    }\n\n    function minus(a, b) {\n      return a - b;\n    }\n\n    function multiply(a, b) {\n      return a * b;\n    }\n\n    function divide(a, b) {\n      if (b === 0) {\n        return 0;\n      }\n      return a / b;\n    }\n    /*\n        function makeProperty(num, min) {\n          min = min || 0;\n          return new Bacon.fromBinder(function (sink) {\n            sink(num);\n          }).toProperty(min);\n        }*/\n\n    function fetchAndCombine(token, combiner) {\n      var right = '';\n      var left = calculate(token.left);\n      if (token.right) {\n        right = calculate(token.right);\n      } else {\n        right = Bacon.constant(0);\n      }\n      return left.combine(right, combiner);\n    }\n\n    function calculate(token) {\n      var left = 0;\n      var right = 0;\n      var value = 0;\n      var cell = 0;\n      console.log('calculate:', token.type);\n      if (token.type === 'number') {\n        value = Bacon.constant(parseFloat(token.token));\n      } else if (token.type === 'cellname') {\n        cell = spreadSheet.getCellById(token.token);\n        value = cell.bus;\n        cell.pusher();\n        console.log('got cell:', value);\n      } else if (token.type === 'unary') {\n        right = calculate(token.right);\n        if (token.token === '+') {\n          value = right;\n        } else {\n          left = Bacon.constant(0);\n          value = left.combine(right, minus);\n        }\n      } else if (token.type === \"leftparen\") {\n        left = calculate(token.left);\n        right = token.right;\n        if (right.type === 'rightparen') {\n          value = left;\n        }\n      } else if (token.type === 'operator') {\n\n        switch (token.token) {\n          case '+':\n            value = fetchAndCombine(token, add);\n            break;\n          case '-':\n            value = fetchAndCombine(token, minus);\n            break;\n          case '*':\n            value = fetchAndCombine(token, multiply);\n            break;\n          case '/':\n            value = fetchAndCombine(token, divide);\n            break;\n        }\n      }\n      return value;\n    }\n    /* eslint-disable */\n    function getter() {\n      var value = localStorage[element.attr('id')] || \"\";\n      var total = 0;\n      if (value.charAt(0) === \"=\") {\n        value = window.parser(value.substring(1));\n        total = calculate(value);\n        //DATA\n        return total;\n      } else {\n        return isNaN(parseFloat(value)) ? value : parseFloat(value);\n      }\n    }\n    /* eslint-enable */\n\n  });\n\n  spreadSheet.addCells(cells);\n}\n\nvar userId;\n/* eslint-disable */\nvar socket = io.connect('http://localhost:5000');\n/* eslint-enable */\n\nsocket.on('connect', function (data) {\n  console.log('connect');\n  socket.emit('join', 'Hello World from client');\n\n  socket.on('userid', function (data) {\n    userId = data;\n  });\n\n  var socketUpdate = Bacon.fromBinder(function (sink) {\n    socket.on('update', function (data) {\n      sink(data);\n    });\n  });\n\n  var socketMessage = Bacon.fromBinder(function (sink) {\n    socket.on('messages', function (data) {\n      sink(data);\n    });\n  });\n\n  processElements(socketUpdate, socketMessage);\n});\n"],"sourceRoot":"/source/"}