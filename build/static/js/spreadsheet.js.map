{"version":3,"sources":["spreadsheet.js"],"names":["contrainValue","value","min","max","_","isFinite","Math","drawSpreadSheet","width","height","table","document","querySelector","i","row","insertRow","j","letter","String","fromCharCode","charCodeAt","insertCell","innerHTML","processElements","socketUpdate","socketMessage","add","a","b","minus","multiply","divide","fetchAndCombine","token","combiner","pushers","right","left","calculate","Bacon","constant","combine","type","parseFloat","spreadSheet","getCellById","push","bus","updateCell","cell","element","is","val","formula","localStorage","id","pusher","INPUTS","each","index","elem","$","model","attr","cells","filter","data","onValue","toUpperCase","isUndefined","window","parser","replace","result","forEach","asEventStream","event","elementid","target","map","user_id","userId","socket","emit","addCells","CellFactory","Cell","this","Bus","prototype","getNewCell","SpreadSheetFactory","SpreadSheet","find","isArray","Array","apply","addCell","removeCellsById","ids","remove","removeCellById","getSpreadSheet","io","connect","on","fromBinder","sink"],"mappings":"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","file":"spreadsheet.js","sourcesContent":["/* eslint-disable */\nvar _ = _;\nvar Bacon = Bacon;\n/* eslint-enable */\n\n/*\n * CellFactory\n */\nvar CellFactory = (function () {\n\t/*\n\t * Constructor\n\t *\n\t * param {Object} json object containing cell data\n\t */\n\tfunction Cell(data) {\n\t\tthis.id = data.id;\n\t\tthis.element = data.element;\n\t\tthis.value = 0;\n\t\tthis.bus = new Bacon.Bus();\n\t}\n\n\t/*\n\t * pusher\n\t *\n\t * Pushes the current value to all subscribers.\n\t *\n\t */\n\tCell.prototype.pusher = function () {\n\t\tthis.bus.push(this.value);\n\t};\n\n\treturn {\n\t\tgetNewCell: function (data) {\n\t\t\treturn new Cell(data);\n\t\t}\n\t};\n})();\n\n/*\n * SpreadSheetFactory\n */\nvar SpreadSheetFactory = (function () {\n\t/*\n\t * Constructor\n\t *\n\t * param {Array} optional array containing cell data.\n\t */\n\tfunction SpreadSheet(cells) {\n\t\tthis.cells = [];\n\t\tthis.addCells(cells);\n\t}\n\n\t/*\n\t * getCellById\n\t *\n\t * Returns the the first cell taht match the id\n\t * or returns undefined.\n\t *\n\t * param {string} id of cell\n\t * return {Cell}\n\t */\n\tSpreadSheet.prototype.getCellById = function (id) {\n\t\treturn _.find(this.cells, {\n\t\t\tid: id\n\t\t});\n\t};\n\n\t/*\n\t * addCells\n\t *\n\t * Accepts an array of json objects. A collection of\n\t * Cell objects are create using the json objects.\n\t * The cells are added to collection of spreadsheet\n\t * cells.\n\t *\n\t * param {Array} an array of json objects\n\t */\n\tSpreadSheet.prototype.addCells = function (cells) {\n\t\tcells = _.isArray(cells) ? cells : [];\n\t\tcells = cells.map(function (data) {\n\t\t\treturn CellFactory.getNewCell(data);\n\t\t});\n\t\tArray.prototype.push.apply(this.cells, cells);\n\t};\n\n\tSpreadSheet.prototype.addCell = function (data) {\n\t\tthis.cells.push(CellFactory.getNewCell(data));\n\t};\n\n\t/*\n\t * removeCellsById\n\t *\n\t * Accepts a list of cell ids. Cells matching each\n\t * are removed one at a time from the collection\n\t * of spreatsheet cells.\n\t *\n\t * param {Array} a list of ids to remove\n\t */\n\tSpreadSheet.prototype.removeCellsById = function (ids) {\n\t\tids = _.isArray(ids) ? ids : [];\n\t\t_.forEach(ids, function (id) {\n\t\t\t_.remove(this.cells, function (cell) {\n\t\t\t\treturn cell.id === id;\n\t\t\t});\n\t\t});\n\t};\n\n\t/*\n\t * removeCellById\n\t *\n\t * Accepts an id of a cell that needs to be removed.\n\t * Cells that match the id are removed one at a time\n\t * from the collection of spreatsheet cells.\n\t *\n\t * param {String} id the id of the cell to be removed\n\t */\n\tSpreadSheet.prototype.removeCellById = function (id) {\n\t\t_.remove(this.cells, function (cell) {\n\t\t\treturn cell.id === id;\n\t\t});\n\t};\n\n\treturn {\n\t\tgetSpreadSheet: function (cells) {\n\t\t\treturn new SpreadSheet(cells);\n\t\t}\n\t};\n\n})();\n\nvar spreadSheet = SpreadSheetFactory.getSpreadSheet();\n\nfunction contrainValue(value, min, max) {\n\tmin = min || 0;\n\tmax = max || 10;\n\tvalue = _.isFinite(value) ? value : 1;\n\tvalue = Math.max(min, value);\n\tvalue = Math.min(max, value);\n\treturn value;\n}\n\n/*\n * drawSpreadSheet\n *\n * param {int} width\n * param {int} height\n * return void\n */\nfunction drawSpreadSheet(width, height) {\n\twidth = contrainValue(width, 1, 27);\n\theight = contrainValue(height, 1, 20);\n\n\tvar table = document.querySelector(\"table\");\n\n\tfor (var i = 0; i < height; i++) {\n\t\tvar row = table.insertRow(-1);\n\t\tfor (var j = 0; j < width; j++) {\n\t\t\tvar letter = String.fromCharCode(\"A\".charCodeAt(0) + j - 1);\n\t\t\trow.insertCell(-1)\n\t\t\t\t.innerHTML = i && j ? \"<input id='\" + letter + i +\n\t\t\t\t\"' class='spreadsheet-cell' />\" :\n\t\t\t\ti || letter;\n\t\t}\n\t}\n}\n\ndrawSpreadSheet(10, 10);\n\nvar INPUTS = $('.spreadsheet-cell'); //get all inputs\nvar cells = [];\n\nfunction processElements(socketUpdate, socketMessage) {\n\tfunction add(a, b) {\n\t\treturn a + b;\n\t}\n\n\tfunction minus(a, b) {\n\t\treturn a - b;\n\t}\n\n\tfunction multiply(a, b) {\n\t\treturn a * b;\n\t}\n\n\tfunction divide(a, b) {\n\t\tif (b === 0) {\n\t\t\treturn 0;\n\t\t}\n\t\treturn a / b;\n\t}\n\n\tfunction fetchAndCombine(token, combiner, pushers) {\n\t\tvar right = '';\n\t\tvar left = calculate(token.left, pushers);\n\n\t\tif (token.right) {\n\t\t\tright = calculate(token.right, pushers);\n\t\t} else {\n\t\t\tright = Bacon.constant(0);\n\t\t}\n\t\treturn left.combine(right, combiner);\n\t}\n\n\tfunction calculate(token, pushers) {\n\t\tvar left = 0;\n\t\tvar right = 0;\n\t\tvar value = 0;\n\n\t\tif (token.type === 'number') {\n\t\t\tvalue = Bacon.constant(parseFloat(token.token));\n\t\t} else if (token.type === 'cellname') {\n\t\t\tvalue = spreadSheet.getCellById(token.token);\n\t\t\tpushers.push(value);\n\t\t\tvalue = value.bus;\n\t\t} else if (token.type === 'unary') {\n\t\t\tright = calculate(token.right, pushers);\n\t\t\tif (token.token === '+') {\n\t\t\t\tvalue = right;\n\t\t\t} else {\n\t\t\t\tleft = Bacon.constant(0);\n\t\t\t\tvalue = left.combine(right, minus);\n\t\t\t}\n\t\t} else if (token.type === \"leftparen\") {\n\t\t\tleft = calculate(token.left, pushers);\n\t\t\tright = token.right;\n\t\t\tif (right.type === 'rightparen') {\n\t\t\t\tvalue = left;\n\t\t\t}\n\t\t} else if (token.type === 'operator') {\n\n\t\t\tswitch (token.token) {\n\t\t\tcase '+':\n\t\t\t\tvalue = fetchAndCombine(token, add, pushers);\n\t\t\t\tbreak;\n\t\t\tcase '-':\n\t\t\t\tvalue = fetchAndCombine(token, minus, pushers);\n\t\t\t\tbreak;\n\t\t\tcase '*':\n\t\t\t\tvalue = fetchAndCombine(token, multiply, pushers);\n\t\t\t\tbreak;\n\t\t\tcase '/':\n\t\t\t\tvalue = fetchAndCombine(token, divide, pushers);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\treturn value;\n\t}\n\n\tfunction updateCell(cell, element, value) {\n\t\tcell.value = value;\n\t\tif (element.is(':focus')) {\n\t\t\telement.val(cell.formula);\n\t\t} else {\n\t\t\telement.val(cell.value);\n\t\t}\n\t\tlocalStorage[cell.id] = cell.formula;\n\t\tcell.pusher();\n\t}\n\n\tINPUTS.each(function (index, elem) {\n\t\tvar element = $(elem);\n\t\tvar model = {\n\t\t\telement: element,\n\t\t\tid: element.attr('id')\n\t\t};\n\t\tvar pushers = [];\n\n\t\tcells.push(model);\n\n\t\tsocketUpdate.filter(function (data) {\n\t\t\t\treturn data.element === model.id;\n\t\t\t})\n\t\t\t.onValue(function (data) {\n\t\t\t\tvar cell = spreadSheet.getCellById(data.element);\n\t\t\t\tvar value = data.formula.toUpperCase();\n\t\t\t\tpushers = [];\n\t\t\t\tcell.formula = value;\n\n\t\t\t\tif (_.isUndefined(value) || value === '') {\n\t\t\t\t\tupdateCell(cell, element, 0);\n\t\t\t\t} else {\n\t\t\t\t\tvalue = window.parser(value.replace('=', ''));\n\t\t\t\t\tcalculate(value, pushers)\n\t\t\t\t\t\t.onValue(function (result) {\n\t\t\t\t\t\t\tupdateCell(cell, element, result);\n\t\t\t\t\t\t});\n\t\t\t\t\tpushers.forEach(function (cell) {\n\t\t\t\t\t\tcell.pusher();\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\n\t\telement.asEventStream('focus')\n\t\t\t.onValue(function (event) {\n\t\t\t\tvar elementid = event.target.id;\n\t\t\t\tvar cell = spreadSheet.getCellById(elementid);\n\t\t\t\tvar value = cell.formula; \n\t\t\t\telement.val(value);\n\t\t\t});\n\n\t\telement.asEventStream('blur')\n\t\t\t.map(function (event) {\n\t\t\t\tvar elementid = event.target.id;\n\t\t\t\tvar formula = event.target.value;\n\n\t\t\t\treturn {\n\t\t\t\t\telement: elementid,\n\t\t\t\t\tformula: formula,\n\t\t\t\t\tuser_id: userId\n\t\t\t\t};\n\t\t\t})\n\t\t\t.onValue(function (data) {\n\t\t\t\tsocket.emit('write', data);\n\t\t\t});\n\t});\n\n\tspreadSheet.addCells(cells);\n}\n\nvar userId;\n/* eslint-disable */\nvar socket = io.connect('http://localhost:5000');\n/* eslint-enable */\n\nsocket.on('connect', function (data) {\n\tsocket.emit('join', 'Hello World from client');\n\n\tsocket.on('userid', function (data) {\n\t\tuserId = data;\n\t});\n\n\tvar socketUpdate = Bacon.fromBinder(function (sink) {\n\t\tsocket.on('update', function (data) {\n\t\t\tsink(data);\n\t\t});\n\t});\n\n\tvar socketMessage = Bacon.fromBinder(function (sink) {\n\t\tsocket.on('messages', function (data) {\n\t\t\tsink(data);\n\t\t});\n\t});\n\n\tprocessElements(socketUpdate, socketMessage);\n});\n"],"sourceRoot":"/source/"}