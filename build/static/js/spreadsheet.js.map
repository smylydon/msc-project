{"version":3,"sources":["spreadsheet.js"],"names":["processElements","socketUpdate","socketMessage","INPUTS","each","index","elem","updateCell","cell","element","value","val","localStorage","id","formula","add","a","b","minus","multiply","divide","makeProperty","num","min","Bacon","fromBinder","sink","toProperty","fetchAndCombine","token","combiner","right","left","calculate","combine","console","log","type","parseFloat","spreadSheet","getCellById","bus","$","model","attr","cells","push","filter","data","onValue","charAt","window","parser","substring","total","x","isNaN","asEventStream","event","elementid","target","map","user_id","userId","socket","emit","addCells","_","Cell","this","that","SpreadSheetFactory","SpreadSheet","prototype","find","isArray","Array","apply","addCell","removeCellsById","ids","forEach","remove","removeCellById","getSpreadSheet","i","row","document","querySelector","insertRow","j","letter","String","fromCharCode","charCodeAt","insertCell","innerHTML","io","connect","on"],"mappings":"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","file":"spreadsheet.js","sourcesContent":["/* eslint-disable */\nvar _ = _;\nvar Bacon = Bacon;\n/* eslint-enable */\n\nvar Cell = function (cell) {\n  this.id = cell.id;\n  this.element = cell.element;\n  this.value = 55;\n  var that = this;\n  this.bus = new Bacon.fromBinder(function (sink) {\n    //that.pusher = function () {\n    sink(that.value);\n    //};\n    //console.log('fromBinder');\n  });\n};\n\nvar SpreadSheetFactory = (function () {\n  function SpreadSheet(cells) {\n    this.cells = [];\n    this.addCells(cells);\n  }\n\n  SpreadSheet.prototype.getCellById = function (id) {\n    return _.find(this.cells, {\n      id: id\n    });\n  };\n\n  SpreadSheet.prototype.addCells = function (cells) {\n    cells = _.isArray(cells) ? cells : [];\n    cells = cells.map(function (cell) {\n      return new Cell(cell);\n    });\n    Array.prototype.push.apply(this.cells, cells);\n  };\n\n  SpreadSheet.prototype.addCell = function (cell) {\n    this.cells.push(new Cell(cell));\n  };\n\n  SpreadSheet.prototype.removeCellsById = function (ids) {\n    ids = _.isArray(ids) ? ids : [];\n    _.forEach(ids, function (id) {\n      _.remove(this.cells, function (cell) {\n        return cell.id === id;\n      });\n    });\n  };\n\n  SpreadSheet.prototype.removeCellById = function (id) {\n    _.remove(this.cells, function (cell) {\n      return cell.id === id;\n    });\n  };\n\n  return {\n    getSpreadSheet: function (cells) {\n      return new SpreadSheet(cells);\n    }\n  };\n\n})();\n\nvar spreadSheet = SpreadSheetFactory.getSpreadSheet();\n\nfor (var i = 0; i < 6; i++) {\n  var row = document.querySelector(\"table\")\n    .insertRow(-1);\n  for (var j = 0; j < 6; j++) {\n    var letter = String.fromCharCode(\"A\".charCodeAt(0) + j - 1);\n    row.insertCell(-1)\n      .innerHTML = i && j ? \"<input id='\" + letter + i + \"'/>\" :\n      i || letter;\n  }\n}\n\n//var DATA = {};\n\nvar INPUTS = $('input'); //get all inputs\nvar cells = [];\n\nfunction processElements(socketUpdate, socketMessage) {\n  INPUTS.each(function (index, elem) {\n    var element = $(elem);\n    var model = {\n      element: element,\n      id: element.attr('id')\n    };\n\n    cells.push(model);\n\n    function updateCell(cell, element, value) {\n      cell.value = value;\n      element.val(cell.value);\n      localStorage[cell.id] = cell.formula;\n    }\n\n    socketUpdate.filter(function (data) {\n      return data.element === model.id;\n    }).onValue(function (data) {\n      var cell = spreadSheet.getCellById(data.element);\n      var value = data.formula;\n      cell.formula = value;\n      console.log(' cell is:', value);\n      if (value.charAt(0) === \"=\") {\n        value = window.parser(value.substring(1));\n        var total = calculate(value);\n        console.log('made it');\n        total.onValue(function (x) {\n          updateCell(cell, element, x);\n        });\n\n        //DATA\n        //return total;\n      } else {\n        value = isNaN(parseFloat(value)) ? value : parseFloat(value);\n        updateCell(cell, element, value);\n      }\n\n    });\n\n    element.asEventStream('focus')\n      .onValue(function (event) {\n        var elementid = event.target.id;\n        var value = localStorage[elementid] || \"\";\n        element.val(value);\n      });\n\n    element.asEventStream('blur')\n      .map(function (event) {\n        var elementid = event.target.id;\n        var formula = event.target.value;\n        localStorage[elementid] = formula;\n        console.log('blurStream');\n        return {\n          element: elementid,\n          formula: formula,\n          user_id: userId\n        };\n      }).onValue(function (data) {\n        socket.emit('write', data);\n      });\n\n    function add(a, b) {\n      return a + b;\n    }\n\n    function minus(a, b) {\n      return a - b;\n    }\n\n    function multiply(a, b) {\n      return a * b;\n    }\n\n    function divide(a, b) {\n      if (b === 0) {\n        return 0;\n      }\n      return a / b;\n    }\n\n    function makeProperty(num, min) {\n      min = min || 0;\n      return new Bacon.fromBinder(function (sink) {\n        sink(num);\n      }).toProperty(min);\n    }\n\n    function fetchAndCombine(token, combiner) {\n      var right = '';\n      var left = calculate(token.left);\n      if (token.right) {\n        right = calculate(token.right);\n      } else {\n        right = makeProperty(0);\n      }\n      return left.combine(right, combiner);\n    }\n\n    function calculate(token) {\n      var left = 0;\n      var right = 0;\n      var value = 0;\n\n      console.log('calculate:', token.type);\n      if (token.type === 'number') {\n        value = makeProperty(parseFloat(token.token));\n      } else if (token.type === 'cellname') {\n        value = spreadSheet.getCellById(token.token).bus;\n        console.log('got cell:', value);\n      } else if (token.type === 'unary') {\n        right = calculate(token.right);\n        if (token.token === '+') {\n          value = right;\n        } else {\n          left = makeProperty(0);\n          value = left.combine(right, minus);\n        }\n      } else if (token.type === \"leftparen\") {\n        left = calculate(token.left);\n        right = token.right;\n        if (right.type === 'rightparen') {\n          value = left;\n        }\n      } else if (token.type === 'operator') {\n\n        switch (token.token) {\n          case '+':\n            value = fetchAndCombine(token, add);\n            break;\n          case '-':\n            value = fetchAndCombine(token, minus);\n            break;\n          case '*':\n            value = fetchAndCombine(token, multiply);\n            break;\n          case '/':\n            value = fetchAndCombine(token, divide);\n            break;\n        }\n      }\n      return value;\n    }\n    /* eslint-disable */\n    function getter() {\n      var value = localStorage[element.attr('id')] || \"\";\n      var total = 0;\n      if (value.charAt(0) === \"=\") {\n        value = window.parser(value.substring(1));\n        total = calculate(value);\n        //DATA\n        return total;\n      } else {\n        return isNaN(parseFloat(value)) ? value : parseFloat(value);\n      }\n    }\n    /* eslint-enable */\n\n  });\n\n  spreadSheet.addCells(cells);\n}\n\nvar userId;\n/* eslint-disable */\nvar socket = io.connect('http://localhost:5000');\n/* eslint-enable */\n\nsocket.on('connect', function (data) {\n  console.log('connect');\n  socket.emit('join', 'Hello World from client');\n\n  socket.on('userid', function (data) {\n    userId = data;\n  });\n\n  var socketUpdate = Bacon.fromBinder(function (sink) {\n    socket.on('update', function (data) {\n      sink(data);\n    });\n  });\n\n  var socketMessage = Bacon.fromBinder(function (sink) {\n    socket.on('messages', function (data) {\n      sink(data);\n    });\n  });\n\n  processElements(socketUpdate, socketMessage);\n});\n"],"sourceRoot":"/source/"}