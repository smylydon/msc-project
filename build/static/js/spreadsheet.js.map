{"version":3,"sources":["spreadsheet.js"],"names":["contrainValue","value","min","max","_","isFinite","Math","drawSpreadSheet","width","height","table","document","querySelector","i","row","insertRow","j","letter","String","fromCharCode","charCodeAt","insertCell","innerHTML","processElements","socketUpdate","socketMessage","add","a","b","minus","multiply","divide","fetchAndCombine","token","combiner","pushers","right","left","calculate","Bacon","constant","combine","type","parseFloat","spreadSheet","getCellById","push","bus","updateCell","cell","element","is","val","formula","localStorage","id","pusher","INPUTS","each","index","elem","$","model","attr","cells","filter","data","onValue","toUpperCase","timestamp","lastUpdated","dispose","isUndefined","expanded","window","parser","parse","replace","isString","test","result","uniqBy","forEach","console","log","asEventStream","event","elementid","target","map","user_id","userId","socket","emit","addCells","setSpreadSheet","CellFactory","Cell","this","Bus","prototype","getNewCell","SpreadSheetFactory","SpreadSheet","find","isArray","Array","apply","addCell","removeCellsById","ids","remove","removeCellById","getSpreadSheet","io","connect","on","fromBinder","sink"],"mappings":"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","file":"spreadsheet.js","sourcesContent":["/* eslint-disable */\nvar _ = _;\nvar Bacon = Bacon;\n/* eslint-enable */\n\n/*\n * CellFactory\n */\nvar CellFactory = (function () {\n\t/*\n\t * Constructor\n\t *\n\t * param {Object} json object containing cell data\n\t */\n\tfunction Cell(data) {\n\t\tthis.id = data.id;\n\t\tthis.element = data.element;\n\t\tthis.value = 0;\n\t\tthis.expanded = '0';\n\t\tthis.lastUpdated = 0;\n\t\tthis.dispose = null;\n\t\tthis.bus = new Bacon.Bus();\n\t}\n\n\t/*\n\t * pusher\n\t *\n\t * Pushes the current value to all subscribers.\n\t *\n\t */\n\tCell.prototype.pusher = function () {\n\t\tthis.bus.push(this.value);\n\t};\n\n\treturn {\n\t\tgetNewCell: function (data) {\n\t\t\treturn new Cell(data);\n\t\t}\n\t};\n})();\n\n/*\n * SpreadSheetFactory\n */\nvar SpreadSheetFactory = (function () {\n\t/*\n\t * Constructor\n\t *\n\t * param {Array} optional array containing cell data.\n\t */\n\tfunction SpreadSheet(cells) {\n\t\tthis.cells = [];\n\t\tthis.addCells(cells);\n\t}\n\n\t/*\n\t * getCellById\n\t *\n\t * Returns the the first cell taht match the id\n\t * or returns undefined.\n\t *\n\t * param {string} id of cell\n\t * return {Cell}\n\t */\n\tSpreadSheet.prototype.getCellById = function (id) {\n\t\treturn _.find(this.cells, {\n\t\t\tid: id\n\t\t});\n\t};\n\n\t/*\n\t * addCells\n\t *\n\t * Accepts an array of json objects. A collection of\n\t * Cell objects are create using the json objects.\n\t * The cells are added to collection of spreadsheet\n\t * cells.\n\t *\n\t * param {Array} an array of json objects\n\t */\n\tSpreadSheet.prototype.addCells = function (cells) {\n\t\tcells = _.isArray(cells) ? cells : [];\n\t\tcells = cells.map(function (data) {\n\t\t\treturn CellFactory.getNewCell(data);\n\t\t});\n\t\tArray.prototype.push.apply(this.cells, cells);\n\t};\n\n\tSpreadSheet.prototype.addCell = function (data) {\n\t\tthis.cells.push(CellFactory.getNewCell(data));\n\t};\n\n\t/*\n\t * removeCellsById\n\t *\n\t * Accepts a list of cell ids. Cells matching each\n\t * are removed one at a time from the collection\n\t * of spreatsheet cells.\n\t *\n\t * param {Array} a list of ids to remove\n\t */\n\tSpreadSheet.prototype.removeCellsById = function (ids) {\n\t\tids = _.isArray(ids) ? ids : [];\n\t\t_.forEach(ids, function (id) {\n\t\t\t_.remove(this.cells, function (cell) {\n\t\t\t\treturn cell.id === id;\n\t\t\t});\n\t\t});\n\t};\n\n\t/*\n\t * removeCellById\n\t *\n\t * Accepts an id of a cell that needs to be removed.\n\t * Cells that match the id are removed one at a time\n\t * from the collection of spreatsheet cells.\n\t *\n\t * param {String} id the id of the cell to be removed\n\t */\n\tSpreadSheet.prototype.removeCellById = function (id) {\n\t\t_.remove(this.cells, function (cell) {\n\t\t\treturn cell.id === id;\n\t\t});\n\t};\n\n\treturn {\n\t\tgetSpreadSheet: function (cells) {\n\t\t\treturn new SpreadSheet(cells);\n\t\t}\n\t};\n\n})();\n\nvar spreadSheet = SpreadSheetFactory.getSpreadSheet();\n\nfunction contrainValue(value, min, max) {\n\tmin = min || 0;\n\tmax = max || 10;\n\tvalue = _.isFinite(value) ? value : 1;\n\tvalue = Math.max(min, value);\n\tvalue = Math.min(max, value);\n\treturn value;\n}\n\n/*\n * drawSpreadSheet\n *\n * param {int} width\n * param {int} height\n * return void\n */\nfunction drawSpreadSheet(width, height) {\n\twidth = contrainValue(width, 1, 27);\n\theight = contrainValue(height, 1, 20);\n\n\tvar table = document.querySelector(\"table\");\n\n\tfor (var i = 0; i < height; i++) {\n\t\tvar row = table.insertRow(-1);\n\t\tfor (var j = 0; j < width; j++) {\n\t\t\tvar letter = String.fromCharCode(\"A\".charCodeAt(0) + j - 1);\n\t\t\trow.insertCell(-1)\n\t\t\t\t.innerHTML = i && j ? \"<input id='\" + letter + i +\n\t\t\t\t\"' class='spreadsheet-cell' />\" :\n\t\t\t\ti || letter;\n\t\t}\n\t}\n}\n\ndrawSpreadSheet(10, 10);\n\nvar INPUTS = $('.spreadsheet-cell'); //get all inputs\nvar cells = [];\n\nfunction processElements(socketUpdate, socketMessage) {\n\tfunction add(a, b) {\n\t\treturn a + b;\n\t}\n\n\tfunction minus(a, b) {\n\t\treturn a - b;\n\t}\n\n\tfunction multiply(a, b) {\n\t\treturn a * b;\n\t}\n\n\tfunction divide(a, b) {\n\t\tif (b === 0) {\n\t\t\treturn 0;\n\t\t}\n\t\treturn a / b;\n\t}\n\n\tfunction fetchAndCombine(token, combiner, pushers) {\n\t\tvar right = '';\n\t\tvar left = calculate(token.left, pushers);\n\n\t\tif (token.right) {\n\t\t\tright = calculate(token.right, pushers);\n\t\t} else {\n\t\t\tright = Bacon.constant(0);\n\t\t}\n\t\treturn left.combine(right, combiner);\n\t}\n\n\tfunction calculate(token, pushers) {\n\t\tvar left = 0;\n\t\tvar right = 0;\n\t\tvar value = 0;\n\n\t\tif (token.type === 'number') {\n\t\t\tvalue = Bacon.constant(parseFloat(token.token));\n\t\t} else if (token.type === 'cellname') {\n\t\t\tvalue = spreadSheet.getCellById(token.token);\n\t\t\tpushers.push(value);\n\t\t\tvalue = value.bus;\n\t\t} else if (token.type === 'unary') {\n\t\t\tright = calculate(token.right, pushers);\n\t\t\tif (token.token === '+') {\n\t\t\t\tvalue = right;\n\t\t\t} else {\n\t\t\t\tleft = Bacon.constant(0);\n\t\t\t\tvalue = left.combine(right, minus);\n\t\t\t}\n\t\t} else if (token.type === \"leftparen\") {\n\t\t\tleft = calculate(token.left, pushers);\n\t\t\tright = token.right;\n\t\t\tif (right.type === 'rightparen') {\n\t\t\t\tvalue = left;\n\t\t\t}\n\t\t} else if (token.type === 'operator') {\n\n\t\t\tswitch (token.token) {\n\t\t\tcase '+':\n\t\t\t\tvalue = fetchAndCombine(token, add, pushers);\n\t\t\t\tbreak;\n\t\t\tcase '-':\n\t\t\t\tvalue = fetchAndCombine(token, minus, pushers);\n\t\t\t\tbreak;\n\t\t\tcase '*':\n\t\t\t\tvalue = fetchAndCombine(token, multiply, pushers);\n\t\t\t\tbreak;\n\t\t\tcase '/':\n\t\t\t\tvalue = fetchAndCombine(token, divide, pushers);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\treturn value;\n\t}\n\n\tfunction updateCell(cell, element, value) {\n\t\tcell.value = value;\n\t\tif (element.is(':focus')) {\n\t\t\telement.val(cell.formula);\n\t\t} else {\n\t\t\telement.val(cell.value);\n\t\t}\n\t\tlocalStorage[cell.id] = cell.formula;\n\t\t//console.log('cell:', cell.id, cell.value);\n\t\tcell.pusher();\n\t}\n\n\tINPUTS.each(function (index, elem) {\n\t\tvar element = $(elem);\n\t\tvar model = {\n\t\t\telement: element,\n\t\t\tid: element.attr('id')\n\t\t};\n\t\tvar pushers = [];\n\n\t\tcells.push(model);\n\n\t\tsocketUpdate.filter(function (data) {\n\t\t\t\treturn data.element === model.id;\n\t\t\t})\n\t\t\t.onValue(function (data) {\n\t\t\t\tvar cell = spreadSheet.getCellById(data.element);\n\t\t\t\tvar value = data.formula.toUpperCase();\n\n\t\t\t\tif (data.timestamp > cell.lastUpdated) {\n\t\t\t\t\tpushers = [];\n\t\t\t\t\tcell.formula = value;\n\t\t\t\t\tif (cell.dispose) {\n\t\t\t\t\t\tcell.dispose();\n\t\t\t\t\t}\n\t\t\t\t\tcell.dispose = null;\n\t\t\t\t\tif (_.isUndefined(value) || value === '') {\n\t\t\t\t\t\tupdateCell(cell, element, 0);\n\t\t\t\t\t\tcell.expanded = '0';\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvalue = window.parser.parse(value.replace('=', ''), cell.id);\n\t\t\t\t\t\tif (_.isString(value) && /ERROR/ig.test(value)) {\n\t\t\t\t\t\t\tupdateCell(cell, element, value);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tcell.dispose = calculate(value, pushers)\n\t\t\t\t\t\t\t\t.onValue(function (result) {\n\t\t\t\t\t\t\t\t\tupdateCell(cell, element, result);\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\tpushers = _.uniqBy(pushers, function (cell) {\n\t\t\t\t\t\t\t\treturn cell.id;\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t_.forEach(pushers, function (cell) {\n\t\t\t\t\t\t\t\tcell.pusher();\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tconsole.log('server update rejected:', data);\n\t\t\t\t}\n\t\t\t});\n\n\t\telement.asEventStream('focus')\n\t\t\t.onValue(function (event) {\n\t\t\t\tvar elementid = event.target.id;\n\t\t\t\tvar cell = spreadSheet.getCellById(elementid);\n\t\t\t\tvar value = cell.formula;\n\t\t\t\telement.val(value);\n\t\t\t});\n\n\t\telement.asEventStream('blur')\n\t\t\t.map(function (event) {\n\t\t\t\tvar elementid = event.target.id;\n\t\t\t\tvar formula = event.target.value;\n\n\t\t\t\treturn {\n\t\t\t\t\telement: elementid,\n\t\t\t\t\tformula: formula,\n\t\t\t\t\tuser_id: userId\n\t\t\t\t};\n\t\t\t})\n\t\t\t.onValue(function (data) {\n\t\t\t\tsocket.emit('write', data);\n\t\t\t});\n\t});\n\n\tspreadSheet.addCells(cells);\n\twindow.parser.setSpreadSheet(spreadSheet);\n\n\tsocketUpdate.onValue(function (data) {\n\t\tconsole.log('update:', data);\n\t});\n\t/*\n\t\tsocketMessage.onValue(function (data) {\n\t\t\tconsole.log('message:', data);\n\t\t});*/\n}\n\nvar userId;\n/* eslint-disable */\nvar socket = io.connect('http://localhost:5000');\n/* eslint-enable */\n_.forEach([1, 2], function (value) {\n\tconsole.log('number:', value);\n});\nsocket.on('connect', function (data) {\n\tsocket.emit('join', 'Hello World from client');\n\n\tsocket.on('userid', function (data) {\n\t\tuserId = data;\n\t});\n\n\tvar socketUpdate = Bacon.fromBinder(function (sink) {\n\t\tsocket.on('update', function (data) {\n\t\t\tsink(data);\n\t\t});\n\t});\n\t/*\n\t\tvar socketMessage = Bacon.fromBinder(function (sink) {\n\t\t\tsocket.on('messages', function (data) {\n\t\t\t\tsink(data);\n\t\t\t});\n\t\t});*/\n\n\tprocessElements(socketUpdate);\n});\n"],"sourceRoot":"/source/"}