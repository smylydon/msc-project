<<<<<<< HEAD
<<<<<<< Updated upstream
{"version":3,"sources":["spreadsheet.js"],"names":["contrainValue","value","min","max","_","isFinite","Math","drawSpreadSheet","width","height","table","document","querySelector","i","row","insertRow","j","letter","String","fromCharCode","charCodeAt","insertCell","innerHTML","processElements","socketUpdate","socketMessage","add","a","b","minus","multiply","divide","power","console","log","pow","fetchAndCombine","token","combiner","pushers","right","left","calculate","Bacon","constant","combine","type","parseFloat","spreadSheet","getCellById","push","bus","updateCell","cell","element","is","val","formula","localStorage","id","pusher","INPUTS","each","index","elem","$","model","attr","cells","filter","data","onValue","toUpperCase","timestamp","lastUpdated","dispose","isUndefined","expanded","window","parser","parse","replace","isString","test","result","uniqBy","forEach","asEventStream","event","elementid","target","map","user_id","userId","socket","emit","addCells","setSpreadSheet","CellFactory","Cell","this","Bus","prototype","getNewCell","SpreadSheetFactory","SpreadSheet","find","isArray","Array","apply","addCell","removeCellsById","ids","remove","removeCellById","getSpreadSheet","io","connect","on","fromBinder","sink"],"mappings":"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","file":"spreadsheet.js","sourcesContent":["/* eslint-disable */\nvar _ = _;\nvar Bacon = Bacon;\n/* eslint-enable */\n\n/*\n * CellFactory\n */\nvar CellFactory = (function () {\n\t/*\n\t * Constructor\n\t *\n\t * param {Object} json object containing cell data\n\t */\n\tfunction Cell(data) {\n\t\tthis.id = data.id;\n\t\tthis.element = data.element;\n\t\tthis.value = 0;\n\t\tthis.expanded = '0';\n\t\tthis.lastUpdated = 0;\n\t\tthis.dispose = null;\n\t\tthis.bus = new Bacon.Bus();\n\t}\n\n\t/*\n\t * pusher\n\t *\n\t * Pushes the current value to all subscribers.\n\t *\n\t */\n\tCell.prototype.pusher = function () {\n\t\tthis.bus.push(this.value);\n\t};\n\n\treturn {\n\t\tgetNewCell: function (data) {\n\t\t\treturn new Cell(data);\n\t\t}\n\t};\n})();\n\n/*\n * SpreadSheetFactory\n */\nvar SpreadSheetFactory = (function () {\n\t/*\n\t * Constructor\n\t *\n\t * param {Array} optional array containing cell data.\n\t */\n\tfunction SpreadSheet(cells) {\n\t\tthis.cells = [];\n\t\tthis.addCells(cells);\n\t}\n\n\t/*\n\t * getCellById\n\t *\n\t * Returns the the first cell taht match the id\n\t * or returns undefined.\n\t *\n\t * param {string} id of cell\n\t * return {Cell}\n\t */\n\tSpreadSheet.prototype.getCellById = function (id) {\n\t\treturn _.find(this.cells, {\n\t\t\tid: id\n\t\t});\n\t};\n\n\t/*\n\t * addCells\n\t *\n\t * Accepts an array of json objects. A collection of\n\t * Cell objects are create using the json objects.\n\t * The cells are added to collection of spreadsheet\n\t * cells.\n\t *\n\t * param {Array} an array of json objects\n\t */\n\tSpreadSheet.prototype.addCells = function (cells) {\n\t\tcells = _.isArray(cells) ? cells : [];\n\t\tcells = cells.map(function (data) {\n\t\t\treturn CellFactory.getNewCell(data);\n\t\t});\n\t\tArray.prototype.push.apply(this.cells, cells);\n\t};\n\n\tSpreadSheet.prototype.addCell = function (data) {\n\t\tthis.cells.push(CellFactory.getNewCell(data));\n\t};\n\n\t/*\n\t * removeCellsById\n\t *\n\t * Accepts a list of cell ids. Cells matching each\n\t * are removed one at a time from the collection\n\t * of spreatsheet cells.\n\t *\n\t * param {Array} a list of ids to remove\n\t */\n\tSpreadSheet.prototype.removeCellsById = function (ids) {\n\t\tids = _.isArray(ids) ? ids : [];\n\t\t_.forEach(ids, function (id) {\n\t\t\t_.remove(this.cells, function (cell) {\n\t\t\t\treturn cell.id === id;\n\t\t\t});\n\t\t});\n\t};\n\n\t/*\n\t * removeCellById\n\t *\n\t * Accepts an id of a cell that needs to be removed.\n\t * Cells that match the id are removed one at a time\n\t * from the collection of spreatsheet cells.\n\t *\n\t * param {String} id the id of the cell to be removed\n\t */\n\tSpreadSheet.prototype.removeCellById = function (id) {\n\t\t_.remove(this.cells, function (cell) {\n\t\t\treturn cell.id === id;\n\t\t});\n\t};\n\n\treturn {\n\t\tgetSpreadSheet: function (cells) {\n\t\t\treturn new SpreadSheet(cells);\n\t\t}\n\t};\n\n})();\n\nvar spreadSheet = SpreadSheetFactory.getSpreadSheet();\n\nfunction contrainValue(value, min, max) {\n\tmin = min || 0;\n\tmax = max || 10;\n\tvalue = _.isFinite(value) ? value : 1;\n\tvalue = Math.max(min, value);\n\tvalue = Math.min(max, value);\n\treturn value;\n}\n\n/*\n * drawSpreadSheet\n *\n * param {int} width\n * param {int} height\n * return void\n */\nfunction drawSpreadSheet(width, height) {\n\twidth = contrainValue(width, 1, 27);\n\theight = contrainValue(height, 1, 20);\n\n\tvar table = document.querySelector(\"table\");\n\n\tfor (var i = 0; i < height; i++) {\n\t\tvar row = table.insertRow(-1);\n\t\tfor (var j = 0; j < width; j++) {\n\t\t\tvar letter = String.fromCharCode(\"A\".charCodeAt(0) + j - 1);\n\t\t\trow.insertCell(-1)\n\t\t\t\t.innerHTML = i && j ? \"<input id='\" + letter + i +\n\t\t\t\t\"' class='spreadsheet-cell' />\" :\n\t\t\t\ti || letter;\n\t\t}\n\t}\n}\n\ndrawSpreadSheet(10, 10);\n\nvar INPUTS = $('.spreadsheet-cell'); //get all inputs\nvar cells = [];\n\nfunction processElements(socketUpdate, socketMessage) {\n\tfunction add(a, b) {\n\t\treturn a + b;\n\t}\n\n\tfunction minus(a, b) {\n\t\treturn a - b;\n\t}\n\n\tfunction multiply(a, b) {\n\t\treturn a * b;\n\t}\n\n\tfunction divide(a, b) {\n\t\tif (b === 0) {\n\t\t\treturn 0;\n\t\t}\n\t\treturn a / b;\n\t}\n\n\tfunction power(a, b) {\n\t\tconsole.log('a ^ b:', a, b);\n\t\treturn Math.pow(a, b);\n\t}\n\n\tfunction fetchAndCombine(token, combiner, pushers) {\n\t\tvar right = '';\n\t\tvar left = calculate(token.left, pushers);\n\n\t\tif (token.right) {\n\t\t\tright = calculate(token.right, pushers);\n\t\t} else {\n\t\t\tright = Bacon.constant(0);\n\t\t}\n\t\treturn left.combine(right, combiner);\n\t}\n\n\tfunction calculate(token, pushers) {\n\t\tvar left = 0;\n\t\tvar right = 0;\n\t\tvar value = 0;\n\n\t\tif (token.type === 'number') {\n\t\t\tvalue = Bacon.constant(parseFloat(token.token));\n\t\t} else if (token.type === 'cellname') {\n\t\t\tvalue = spreadSheet.getCellById(token.token);\n\t\t\tpushers.push(value);\n\t\t\tvalue = value.bus;\n\t\t} else if (token.type === 'unary') {\n\t\t\tright = calculate(token.right, pushers);\n\t\t\tif (token.token === '+') {\n\t\t\t\tvalue = right;\n\t\t\t} else {\n\t\t\t\tleft = Bacon.constant(0);\n\t\t\t\tvalue = left.combine(right, minus);\n\t\t\t}\n\t\t} else if (token.type === \"leftparen\") {\n\t\t\tleft = calculate(token.left, pushers);\n\t\t\tright = token.right;\n\t\t\tif (right.type === 'rightparen') {\n\t\t\t\tvalue = left;\n\t\t\t}\n\t\t} else if (token.type === 'operator') {\n\n\t\t\tswitch (token.token) {\n\t\t\tcase '+':\n\t\t\t\tvalue = fetchAndCombine(token, add, pushers);\n\t\t\t\tbreak;\n\t\t\tcase '-':\n\t\t\t\tvalue = fetchAndCombine(token, minus, pushers);\n\t\t\t\tbreak;\n\t\t\tcase '*':\n\t\t\t\tvalue = fetchAndCombine(token, multiply, pushers);\n\t\t\t\tbreak;\n\t\t\tcase '/':\n\t\t\t\tvalue = fetchAndCombine(token, divide, pushers);\n\t\t\t\tbreak;\n\t\t\tcase '^':\n\t\t\t\tvalue = fetchAndCombine(token, power, pushers);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\treturn value;\n\t}\n\n\tfunction updateCell(cell, element, value) {\n\t\tcell.value = value;\n\t\tif (element.is(':focus')) {\n\t\t\telement.val(cell.formula);\n\t\t} else {\n\t\t\telement.val(cell.value);\n\t\t}\n\t\tlocalStorage[cell.id] = cell.formula;\n\t\t//console.log('cell:', cell.id, cell.value);\n\t\tcell.pusher();\n\t}\n\n\tINPUTS.each(function (index, elem) {\n\t\tvar element = $(elem);\n\t\tvar model = {\n\t\t\telement: element,\n\t\t\tid: element.attr('id')\n\t\t};\n\t\tvar pushers = [];\n\n\t\tcells.push(model);\n\n\t\tsocketUpdate.filter(function (data) {\n\t\t\t\treturn data.element === model.id;\n\t\t\t})\n\t\t\t.onValue(function (data) {\n\t\t\t\tvar cell = spreadSheet.getCellById(data.element);\n\t\t\t\tvar value = data.formula.toUpperCase();\n\n\t\t\t\tif (data.timestamp > cell.lastUpdated) {\n\t\t\t\t\tpushers = [];\n\t\t\t\t\tcell.formula = value;\n\t\t\t\t\tif (cell.dispose) {\n\t\t\t\t\t\tcell.dispose();\n\t\t\t\t\t}\n\t\t\t\t\tcell.dispose = null;\n\t\t\t\t\tif (_.isUndefined(value) || value === '') {\n\t\t\t\t\t\tupdateCell(cell, element, 0);\n\t\t\t\t\t\tcell.expanded = '0';\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvalue = window.parser.parse(value.replace('=', ''), cell.id);\n\t\t\t\t\t\tif (_.isString(value) && /ERROR/ig.test(value)) {\n\t\t\t\t\t\t\tupdateCell(cell, element, value);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tcell.dispose = calculate(value, pushers)\n\t\t\t\t\t\t\t\t.onValue(function (result) {\n\t\t\t\t\t\t\t\t\tupdateCell(cell, element, result);\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\tpushers = _.uniqBy(pushers, function (cell) {\n\t\t\t\t\t\t\t\treturn cell.id;\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t_.forEach(pushers, function (cell) {\n\t\t\t\t\t\t\t\tcell.pusher();\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tconsole.log('server update rejected:', data);\n\t\t\t\t}\n\t\t\t});\n\n\t\telement.asEventStream('focus')\n\t\t\t.onValue(function (event) {\n\t\t\t\tvar elementid = event.target.id;\n\t\t\t\tvar cell = spreadSheet.getCellById(elementid);\n\t\t\t\tvar value = cell.formula;\n\t\t\t\telement.val(value);\n\t\t\t});\n\n\t\telement.asEventStream('blur')\n\t\t\t.map(function (event) {\n\t\t\t\tvar elementid = event.target.id;\n\t\t\t\tvar formula = event.target.value;\n\n\t\t\t\treturn {\n\t\t\t\t\telement: elementid,\n\t\t\t\t\tformula: formula,\n\t\t\t\t\tuser_id: userId\n\t\t\t\t};\n\t\t\t})\n\t\t\t.onValue(function (data) {\n\t\t\t\tsocket.emit('write', data);\n\t\t\t});\n\t});\n\n\tspreadSheet.addCells(cells);\n\twindow.parser.setSpreadSheet(spreadSheet);\n\n\tsocketUpdate.onValue(function (data) {\n\t\tconsole.log('update:', data);\n\t});\n\t/*\n\t\tsocketMessage.onValue(function (data) {\n\t\t\tconsole.log('message:', data);\n\t\t});*/\n}\n\nvar userId;\n/* eslint-disable */\nvar socket = io.connect('http://localhost:5000');\n/* eslint-enable */\n_.forEach([1, 2], function (value) {\n\tconsole.log('number:', value);\n});\nsocket.on('connect', function (data) {\n\tsocket.emit('join', 'Hello World from client');\n\n\tsocket.on('userid', function (data) {\n\t\tuserId = data;\n\t});\n\n\tvar socketUpdate = Bacon.fromBinder(function (sink) {\n\t\tsocket.on('update', function (data) {\n\t\t\tsink(data);\n\t\t});\n\t});\n\t/*\n\t\tvar socketMessage = Bacon.fromBinder(function (sink) {\n\t\t\tsocket.on('messages', function (data) {\n\t\t\t\tsink(data);\n\t\t\t});\n\t\t});*/\n\n\tprocessElements(socketUpdate);\n});\n"],"sourceRoot":"/source/"}
=======
<<<<<<< Updated upstream
{"version":3,"sources":["spreadsheet.js"],"names":["contrainValue","value","min","max","_","isFinite","Math","drawSpreadSheet","width","height","table","document","querySelector","i","row","insertRow","j","letter","String","fromCharCode","charCodeAt","insertCell","innerHTML","processElements","socketUpdate","socketMessage","add","a","b","minus","multiply","divide","fetchAndCombine","token","combiner","pushers","right","left","calculate","Bacon","constant","combine","type","parseFloat","spreadSheet","getCellById","push","bus","updateCell","cell","element","is","val","formula","localStorage","id","console","log","pusher","INPUTS","each","index","elem","$","model","attr","cells","filter","data","onValue","toUpperCase","Date","getTime","timestamp","lastUpdated","dispose","isUndefined","expanded","window","parser","parse","replace","result","uniqBy","forEach","asEventStream","event","elementid","target","map","user_id","userId","socket","emit","addCells","setSpreadSheet","CellFactory","Cell","this","Bus","prototype","getNewCell","SpreadSheetFactory","SpreadSheet","find","isArray","Array","apply","addCell","removeCellsById","ids","remove","removeCellById","getSpreadSheet","io","connect","on","fromBinder","sink"],"mappings":"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","file":"spreadsheet.js","sourcesContent":["/* eslint-disable */\nvar _ = _;\nvar Bacon = Bacon;\n/* eslint-enable */\n\n/*\n * CellFactory\n */\nvar CellFactory = (function () {\n\t/*\n\t * Constructor\n\t *\n\t * param {Object} json object containing cell data\n\t */\n\tfunction Cell(data) {\n\t\tthis.id = data.id;\n\t\tthis.element = data.element;\n\t\tthis.value = 0;\n\t\tthis.expanded = '0';\n\t\tthis.lastUpdated = 0;\n\t\tthis.dispose = null;\n\t\tthis.bus = new Bacon.Bus();\n\t}\n\n\t/*\n\t * pusher\n\t *\n\t * Pushes the current value to all subscribers.\n\t *\n\t */\n\tCell.prototype.pusher = function () {\n\t\tthis.bus.push(this.value);\n\t};\n\n\treturn {\n\t\tgetNewCell: function (data) {\n\t\t\treturn new Cell(data);\n\t\t}\n\t};\n})();\n\n/*\n * SpreadSheetFactory\n */\nvar SpreadSheetFactory = (function () {\n\t/*\n\t * Constructor\n\t *\n\t * param {Array} optional array containing cell data.\n\t */\n\tfunction SpreadSheet(cells) {\n\t\tthis.cells = [];\n\t\tthis.addCells(cells);\n\t}\n\n\t/*\n\t * getCellById\n\t *\n\t * Returns the the first cell taht match the id\n\t * or returns undefined.\n\t *\n\t * param {string} id of cell\n\t * return {Cell}\n\t */\n\tSpreadSheet.prototype.getCellById = function (id) {\n\t\treturn _.find(this.cells, {\n\t\t\tid: id\n\t\t});\n\t};\n\n\t/*\n\t * addCells\n\t *\n\t * Accepts an array of json objects. A collection of\n\t * Cell objects are create using the json objects.\n\t * The cells are added to collection of spreadsheet\n\t * cells.\n\t *\n\t * param {Array} an array of json objects\n\t */\n\tSpreadSheet.prototype.addCells = function (cells) {\n\t\tcells = _.isArray(cells) ? cells : [];\n\t\tcells = cells.map(function (data) {\n\t\t\treturn CellFactory.getNewCell(data);\n\t\t});\n\t\tArray.prototype.push.apply(this.cells, cells);\n\t};\n\n\tSpreadSheet.prototype.addCell = function (data) {\n\t\tthis.cells.push(CellFactory.getNewCell(data));\n\t};\n\n\t/*\n\t * removeCellsById\n\t *\n\t * Accepts a list of cell ids. Cells matching each\n\t * are removed one at a time from the collection\n\t * of spreatsheet cells.\n\t *\n\t * param {Array} a list of ids to remove\n\t */\n\tSpreadSheet.prototype.removeCellsById = function (ids) {\n\t\tids = _.isArray(ids) ? ids : [];\n\t\t_.forEach(ids, function (id) {\n\t\t\t_.remove(this.cells, function (cell) {\n\t\t\t\treturn cell.id === id;\n\t\t\t});\n\t\t});\n\t};\n\n\t/*\n\t * removeCellById\n\t *\n\t * Accepts an id of a cell that needs to be removed.\n\t * Cells that match the id are removed one at a time\n\t * from the collection of spreatsheet cells.\n\t *\n\t * param {String} id the id of the cell to be removed\n\t */\n\tSpreadSheet.prototype.removeCellById = function (id) {\n\t\t_.remove(this.cells, function (cell) {\n\t\t\treturn cell.id === id;\n\t\t});\n\t};\n\n\treturn {\n\t\tgetSpreadSheet: function (cells) {\n\t\t\treturn new SpreadSheet(cells);\n\t\t}\n\t};\n\n})();\n\nvar spreadSheet = SpreadSheetFactory.getSpreadSheet();\n\nfunction contrainValue(value, min, max) {\n\tmin = min || 0;\n\tmax = max || 10;\n\tvalue = _.isFinite(value) ? value : 1;\n\tvalue = Math.max(min, value);\n\tvalue = Math.min(max, value);\n\treturn value;\n}\n\n/*\n * drawSpreadSheet\n *\n * param {int} width\n * param {int} height\n * return void\n */\nfunction drawSpreadSheet(width, height) {\n\twidth = contrainValue(width, 1, 27);\n\theight = contrainValue(height, 1, 20);\n\n\tvar table = document.querySelector(\"table\");\n\n\tfor (var i = 0; i < height; i++) {\n\t\tvar row = table.insertRow(-1);\n\t\tfor (var j = 0; j < width; j++) {\n\t\t\tvar letter = String.fromCharCode(\"A\".charCodeAt(0) + j - 1);\n\t\t\trow.insertCell(-1)\n\t\t\t\t.innerHTML = i && j ? \"<input id='\" + letter + i +\n\t\t\t\t\"' class='spreadsheet-cell' />\" :\n\t\t\t\ti || letter;\n\t\t}\n\t}\n}\n\ndrawSpreadSheet(10, 10);\n\nvar INPUTS = $('.spreadsheet-cell'); //get all inputs\nvar cells = [];\n\nfunction processElements(socketUpdate, socketMessage) {\n\tfunction add(a, b) {\n\t\treturn a + b;\n\t}\n\n\tfunction minus(a, b) {\n\t\treturn a - b;\n\t}\n\n\tfunction multiply(a, b) {\n\t\treturn a * b;\n\t}\n\n\tfunction divide(a, b) {\n\t\tif (b === 0) {\n\t\t\treturn 0;\n\t\t}\n\t\treturn a / b;\n\t}\n\n\tfunction fetchAndCombine(token, combiner, pushers) {\n\t\tvar right = '';\n\t\tvar left = calculate(token.left, pushers);\n\n\t\tif (token.right) {\n\t\t\tright = calculate(token.right, pushers);\n\t\t} else {\n\t\t\tright = Bacon.constant(0);\n\t\t}\n\t\treturn left.combine(right, combiner);\n\t}\n\n\tfunction calculate(token, pushers) {\n\t\tvar left = 0;\n\t\tvar right = 0;\n\t\tvar value = 0;\n\n\t\tif (token.type === 'number') {\n\t\t\tvalue = Bacon.constant(parseFloat(token.token));\n\t\t} else if (token.type === 'cellname') {\n\t\t\tvalue = spreadSheet.getCellById(token.token);\n\t\t\tpushers.push(value);\n\t\t\tvalue = value.bus;\n\t\t} else if (token.type === 'unary') {\n\t\t\tright = calculate(token.right, pushers);\n\t\t\tif (token.token === '+') {\n\t\t\t\tvalue = right;\n\t\t\t} else {\n\t\t\t\tleft = Bacon.constant(0);\n\t\t\t\tvalue = left.combine(right, minus);\n\t\t\t}\n\t\t} else if (token.type === \"leftparen\") {\n\t\t\tleft = calculate(token.left, pushers);\n\t\t\tright = token.right;\n\t\t\tif (right.type === 'rightparen') {\n\t\t\t\tvalue = left;\n\t\t\t}\n\t\t} else if (token.type === 'operator') {\n\n\t\t\tswitch (token.token) {\n\t\t\tcase '+':\n\t\t\t\tvalue = fetchAndCombine(token, add, pushers);\n\t\t\t\tbreak;\n\t\t\tcase '-':\n\t\t\t\tvalue = fetchAndCombine(token, minus, pushers);\n\t\t\t\tbreak;\n\t\t\tcase '*':\n\t\t\t\tvalue = fetchAndCombine(token, multiply, pushers);\n\t\t\t\tbreak;\n\t\t\tcase '/':\n\t\t\t\tvalue = fetchAndCombine(token, divide, pushers);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\treturn value;\n\t}\n\n\tfunction updateCell(cell, element, value) {\n\t\tcell.value = value;\n\t\tif (element.is(':focus')) {\n\t\t\telement.val(cell.formula);\n\t\t} else {\n\t\t\telement.val(cell.value);\n\t\t}\n\t\tlocalStorage[cell.id] = cell.formula;\n\t\tconsole.log('cell:', cell.id, cell.value);\n\t\tcell.pusher();\n\t}\n\n\tINPUTS.each(function (index, elem) {\n\t\tvar element = $(elem);\n\t\tvar model = {\n\t\t\telement: element,\n\t\t\tid: element.attr('id')\n\t\t};\n\t\tvar pushers = [];\n\n\t\tcells.push(model);\n\n\t\tsocketUpdate.filter(function (data) {\n\t\t\t\treturn data.element === model.id;\n\t\t\t})\n\t\t\t.onValue(function (data) {\n\t\t\t\tvar cell = spreadSheet.getCellById(data.element);\n\t\t\t\tvar value = data.formula.toUpperCase();\n\t\t\t\tvar id = 'x' + (new Date()).getTime();\n\t\t\t\tconsole.log('date stamps:', data.timestamp, cell.lastUpdated);\n\t\t\t\tif (data.timestamp > cell.lastUpdated) {\n\t\t\t\t\tpushers = [];\n\t\t\t\t\tcell.formula = value;\n\t\t\t\t\tif (cell.dispose) {\n\t\t\t\t\t\tcell.dispose();\n\t\t\t\t\t}\n\t\t\t\t\tcell.dispose = null;\n\t\t\t\t\tif (_.isUndefined(value) || value === '') {\n\t\t\t\t\t\tupdateCell(cell, element, 0);\n\t\t\t\t\t\tcell.expanded = '0';\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvalue = window.parser.parse(value.replace('=', ''));\n\t\t\t\t\t\tcell.dispose = calculate(value, pushers)\n\t\t\t\t\t\t\t.onValue(function (result) {\n\t\t\t\t\t\t\t\tconsole.log('id:', id);\n\t\t\t\t\t\t\t\tupdateCell(cell, element, result);\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\tpushers = _.uniqBy(pushers, function (cell) {\n\t\t\t\t\t\t\treturn cell.id;\n\t\t\t\t\t\t});\n\t\t\t\t\t\t_.forEach(pushers, function (cell) {\n\t\t\t\t\t\t\tcell.pusher();\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tconsole.log('server update rejected:', data);\n\t\t\t\t}\n\t\t\t});\n\n\t\telement.asEventStream('focus')\n\t\t\t.onValue(function (event) {\n\t\t\t\tvar elementid = event.target.id;\n\t\t\t\tvar cell = spreadSheet.getCellById(elementid);\n\t\t\t\tvar value = cell.formula;\n\t\t\t\telement.val(value);\n\t\t\t});\n\n\t\telement.asEventStream('blur')\n\t\t\t.map(function (event) {\n\t\t\t\tvar elementid = event.target.id;\n\t\t\t\tvar formula = event.target.value;\n\n\t\t\t\treturn {\n\t\t\t\t\telement: elementid,\n\t\t\t\t\tformula: formula,\n\t\t\t\t\tuser_id: userId\n\t\t\t\t};\n\t\t\t})\n\t\t\t.onValue(function (data) {\n\t\t\t\tsocket.emit('write', data);\n\t\t\t});\n\t});\n\n\tspreadSheet.addCells(cells);\n\twindow.parser.setSpreadSheet(spreadSheet);\n\n\tsocketUpdate.onValue(function (data) {\n\t\tconsole.log('update:', data);\n\t});\n\t/*\n\t\tsocketMessage.onValue(function (data) {\n\t\t\tconsole.log('message:', data);\n\t\t});*/\n}\n\nvar userId;\n/* eslint-disable */\nvar socket = io.connect('http://localhost:5000');\n/* eslint-enable */\n\nsocket.on('connect', function (data) {\n\tsocket.emit('join', 'Hello World from client');\n\n\tsocket.on('userid', function (data) {\n\t\tuserId = data;\n\t});\n\n\tvar socketUpdate = Bacon.fromBinder(function (sink) {\n\t\tsocket.on('update', function (data) {\n\t\t\tsink(data);\n\t\t});\n\t});\n\t/*\n\t\tvar socketMessage = Bacon.fromBinder(function (sink) {\n\t\t\tsocket.on('messages', function (data) {\n\t\t\t\tsink(data);\n\t\t\t});\n\t\t});*/\n\n\tprocessElements(socketUpdate);\n});\n"],"sourceRoot":"/source/"}
=======
{"version":3,"sources":["spreadsheet.js"],"names":["contrainValue","value","min","max","_","isFinite","Math","drawSpreadSheet","width","height","table","document","querySelector","i","row","insertRow","j","letter","String","fromCharCode","charCodeAt","insertCell","innerHTML","processElements","socketUpdate","socketMessage","add","a","b","minus","multiply","divide","fetchAndCombine","token","combiner","pushers","right","left","calculate","Bacon","constant","combine","type","parseFloat","spreadSheet","getCellById","push","bus","updateCell","cell","element","is","val","formula","localStorage","id","console","log","pusher","INPUTS","each","index","elem","$","model","attr","cells","filter","data","onValue","toUpperCase","isUndefined","expanded","window","parser","parse","replace","result","uniqBy","forEach","asEventStream","event","elementid","target","map","user_id","userId","socket","emit","addCells","setSpreadSheet","CellFactory","Cell","this","Bus","prototype","getNewCell","SpreadSheetFactory","SpreadSheet","find","isArray","Array","apply","addCell","removeCellsById","ids","remove","removeCellById","getSpreadSheet","io","connect","on","fromBinder","sink"],"mappings":"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","file":"spreadsheet.js","sourcesContent":["/* eslint-disable */\nvar _ = _;\nvar Bacon = Bacon;\n/* eslint-enable */\n\n/*\n * CellFactory\n */\nvar CellFactory = (function () {\n\t/*\n\t * Constructor\n\t *\n\t * param {Object} json object containing cell data\n\t */\n\tfunction Cell(data) {\n\t\tthis.id = data.id;\n\t\tthis.element = data.element;\n\t\tthis.value = 0;\n\t\tthis.expanded = '0';\n\t\tthis.bus = new Bacon.Bus();\n\t}\n\n\t/*\n\t * pusher\n\t *\n\t * Pushes the current value to all subscribers.\n\t *\n\t */\n\tCell.prototype.pusher = function () {\n\t\tthis.bus.push(this.value);\n\t};\n\n\treturn {\n\t\tgetNewCell: function (data) {\n\t\t\treturn new Cell(data);\n\t\t}\n\t};\n})();\n\n/*\n * SpreadSheetFactory\n */\nvar SpreadSheetFactory = (function () {\n\t/*\n\t * Constructor\n\t *\n\t * param {Array} optional array containing cell data.\n\t */\n\tfunction SpreadSheet(cells) {\n\t\tthis.cells = [];\n\t\tthis.addCells(cells);\n\t}\n\n\t/*\n\t * getCellById\n\t *\n\t * Returns the the first cell taht match the id\n\t * or returns undefined.\n\t *\n\t * param {string} id of cell\n\t * return {Cell}\n\t */\n\tSpreadSheet.prototype.getCellById = function (id) {\n\t\treturn _.find(this.cells, {\n\t\t\tid: id\n\t\t});\n\t};\n\n\t/*\n\t * addCells\n\t *\n\t * Accepts an array of json objects. A collection of\n\t * Cell objects are create using the json objects.\n\t * The cells are added to collection of spreadsheet\n\t * cells.\n\t *\n\t * param {Array} an array of json objects\n\t */\n\tSpreadSheet.prototype.addCells = function (cells) {\n\t\tcells = _.isArray(cells) ? cells : [];\n\t\tcells = cells.map(function (data) {\n\t\t\treturn CellFactory.getNewCell(data);\n\t\t});\n\t\tArray.prototype.push.apply(this.cells, cells);\n\t};\n\n\tSpreadSheet.prototype.addCell = function (data) {\n\t\tthis.cells.push(CellFactory.getNewCell(data));\n\t};\n\n\t/*\n\t * removeCellsById\n\t *\n\t * Accepts a list of cell ids. Cells matching each\n\t * are removed one at a time from the collection\n\t * of spreatsheet cells.\n\t *\n\t * param {Array} a list of ids to remove\n\t */\n\tSpreadSheet.prototype.removeCellsById = function (ids) {\n\t\tids = _.isArray(ids) ? ids : [];\n\t\t_.forEach(ids, function (id) {\n\t\t\t_.remove(this.cells, function (cell) {\n\t\t\t\treturn cell.id === id;\n\t\t\t});\n\t\t});\n\t};\n\n\t/*\n\t * removeCellById\n\t *\n\t * Accepts an id of a cell that needs to be removed.\n\t * Cells that match the id are removed one at a time\n\t * from the collection of spreatsheet cells.\n\t *\n\t * param {String} id the id of the cell to be removed\n\t */\n\tSpreadSheet.prototype.removeCellById = function (id) {\n\t\t_.remove(this.cells, function (cell) {\n\t\t\treturn cell.id === id;\n\t\t});\n\t};\n\n\treturn {\n\t\tgetSpreadSheet: function (cells) {\n\t\t\treturn new SpreadSheet(cells);\n\t\t}\n\t};\n\n})();\n\nvar spreadSheet = SpreadSheetFactory.getSpreadSheet();\n\nfunction contrainValue(value, min, max) {\n\tmin = min || 0;\n\tmax = max || 10;\n\tvalue = _.isFinite(value) ? value : 1;\n\tvalue = Math.max(min, value);\n\tvalue = Math.min(max, value);\n\treturn value;\n}\n\n/*\n * drawSpreadSheet\n *\n * param {int} width\n * param {int} height\n * return void\n */\nfunction drawSpreadSheet(width, height) {\n\twidth = contrainValue(width, 1, 27);\n\theight = contrainValue(height, 1, 20);\n\n\tvar table = document.querySelector(\"table\");\n\n\tfor (var i = 0; i < height; i++) {\n\t\tvar row = table.insertRow(-1);\n\t\tfor (var j = 0; j < width; j++) {\n\t\t\tvar letter = String.fromCharCode(\"A\".charCodeAt(0) + j - 1);\n\t\t\trow.insertCell(-1)\n\t\t\t\t.innerHTML = i && j ? \"<input id='\" + letter + i +\n\t\t\t\t\"' class='spreadsheet-cell' />\" :\n\t\t\t\ti || letter;\n\t\t}\n\t}\n}\n\ndrawSpreadSheet(10, 10);\n\nvar INPUTS = $('.spreadsheet-cell'); //get all inputs\nvar cells = [];\n\nfunction processElements(socketUpdate, socketMessage) {\n\tfunction add(a, b) {\n\t\treturn a + b;\n\t}\n\n\tfunction minus(a, b) {\n\t\treturn a - b;\n\t}\n\n\tfunction multiply(a, b) {\n\t\treturn a * b;\n\t}\n\n\tfunction divide(a, b) {\n\t\tif (b === 0) {\n\t\t\treturn 0;\n\t\t}\n\t\treturn a / b;\n\t}\n\n\tfunction fetchAndCombine(token, combiner, pushers) {\n\t\tvar right = '';\n\t\tvar left = calculate(token.left, pushers);\n\n\t\tif (token.right) {\n\t\t\tright = calculate(token.right, pushers);\n\t\t} else {\n\t\t\tright = Bacon.constant(0);\n\t\t}\n\t\treturn left.combine(right, combiner);\n\t}\n\n\tfunction calculate(token, pushers) {\n\t\tvar left = 0;\n\t\tvar right = 0;\n\t\tvar value = 0;\n\n\t\tif (token.type === 'number') {\n\t\t\tvalue = Bacon.constant(parseFloat(token.token));\n\t\t} else if (token.type === 'cellname') {\n\t\t\tvalue = spreadSheet.getCellById(token.token);\n\t\t\tpushers.push(value);\n\t\t\tvalue = value.bus;\n\t\t} else if (token.type === 'unary') {\n\t\t\tright = calculate(token.right, pushers);\n\t\t\tif (token.token === '+') {\n\t\t\t\tvalue = right;\n\t\t\t} else {\n\t\t\t\tleft = Bacon.constant(0);\n\t\t\t\tvalue = left.combine(right, minus);\n\t\t\t}\n\t\t} else if (token.type === \"leftparen\") {\n\t\t\tleft = calculate(token.left, pushers);\n\t\t\tright = token.right;\n\t\t\tif (right.type === 'rightparen') {\n\t\t\t\tvalue = left;\n\t\t\t}\n\t\t} else if (token.type === 'operator') {\n\n\t\t\tswitch (token.token) {\n\t\t\tcase '+':\n\t\t\t\tvalue = fetchAndCombine(token, add, pushers);\n\t\t\t\tbreak;\n\t\t\tcase '-':\n\t\t\t\tvalue = fetchAndCombine(token, minus, pushers);\n\t\t\t\tbreak;\n\t\t\tcase '*':\n\t\t\t\tvalue = fetchAndCombine(token, multiply, pushers);\n\t\t\t\tbreak;\n\t\t\tcase '/':\n\t\t\t\tvalue = fetchAndCombine(token, divide, pushers);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\treturn value;\n\t}\n\n\tfunction updateCell(cell, element, value) {\n\t\tcell.value = value;\n\t\tif (element.is(':focus')) {\n\t\t\telement.val(cell.formula);\n\t\t} else {\n\t\t\telement.val(cell.value);\n\t\t}\n\t\tlocalStorage[cell.id] = cell.formula;\n\t\tconsole.log('cell:', cell.id, cell.value);\n\t\tcell.pusher();\n\t}\n\n\tINPUTS.each(function (index, elem) {\n\t\tvar element = $(elem);\n\t\tvar model = {\n\t\t\telement: element,\n\t\t\tid: element.attr('id')\n\t\t};\n\t\tvar pushers = [];\n\n\t\tcells.push(model);\n\n\t\tsocketUpdate.filter(function (data) {\n\t\t\t\treturn data.element === model.id;\n\t\t\t})\n\t\t\t.onValue(function (data) {\n\t\t\t\tvar cell = spreadSheet.getCellById(data.element);\n\t\t\t\tvar value = data.formula.toUpperCase();\n\t\t\t\tpushers = [];\n\t\t\t\tcell.formula = value;\n\n\t\t\t\tif (_.isUndefined(value) || value === '') {\n\t\t\t\t\tupdateCell(cell, element, 0);\n\t\t\t\t\tcell.expanded = '0';\n\t\t\t\t} else {\n\t\t\t\t\tvalue = window.parser.parse(value.replace('=', ''));\n\t\t\t\t\tcalculate(value, pushers)\n\t\t\t\t\t\t.onValue(function (result) {\n\t\t\t\t\t\t\tupdateCell(cell, element, result);\n\t\t\t\t\t\t});\n\t\t\t\t\tpushers = _.uniqBy(pushers, function (cell) {\n\t\t\t\t\t\treturn cell.id;\n\t\t\t\t\t});\n\t\t\t\t\t_.forEach(pushers, function (cell) {\n\t\t\t\t\t\tcell.pusher();\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\n\t\telement.asEventStream('focus')\n\t\t\t.onValue(function (event) {\n\t\t\t\tvar elementid = event.target.id;\n\t\t\t\tvar cell = spreadSheet.getCellById(elementid);\n\t\t\t\tvar value = cell.formula;\n\t\t\t\telement.val(value);\n\t\t\t});\n\n\t\telement.asEventStream('blur')\n\t\t\t.map(function (event) {\n\t\t\t\tvar elementid = event.target.id;\n\t\t\t\tvar formula = event.target.value;\n\n\t\t\t\treturn {\n\t\t\t\t\telement: elementid,\n\t\t\t\t\tformula: formula,\n\t\t\t\t\tuser_id: userId\n\t\t\t\t};\n\t\t\t})\n\t\t\t.onValue(function (data) {\n\t\t\t\tsocket.emit('write', data);\n\t\t\t});\n\t});\n\n\tspreadSheet.addCells(cells);\n\twindow.parser.setSpreadSheet(spreadSheet);\n}\n\nvar userId;\n/* eslint-disable */\nvar socket = io.connect('http://localhost:5000');\n/* eslint-enable */\n\nsocket.on('connect', function (data) {\n\tsocket.emit('join', 'Hello World from client');\n\n\tsocket.on('userid', function (data) {\n\t\tuserId = data;\n\t});\n\n\tvar socketUpdate = Bacon.fromBinder(function (sink) {\n\t\tsocket.on('update', function (data) {\n\t\t\tsink(data);\n\t\t});\n\t});\n\n\tvar socketMessage = Bacon.fromBinder(function (sink) {\n\t\tsocket.on('messages', function (data) {\n\t\t\tsink(data);\n\t\t});\n\t});\n\n\tprocessElements(socketUpdate, socketMessage);\n});\n"],"sourceRoot":"/source/"}
>>>>>>> Stashed changes
>>>>>>> Stashed changes
=======
{"version":3,"sources":["spreadsheet.js"],"names":["contrainValue","value","min","max","_","isFinite","Math","drawSpreadSheet","width","height","table","document","querySelector","i","row","insertRow","j","letter","String","fromCharCode","charCodeAt","insertCell","innerHTML","processElements","socketUpdate","socketMessage","add","a","b","minus","multiply","divide","power","console","log","pow","fetchAndCombine","token","combiner","pushers","right","left","calculate","Bacon","constant","combine","type","parseFloat","spreadSheet","getCellById","push","bus","updateCell","cell","element","is","val","formula","localStorage","id","pusher","INPUTS","each","index","elem","$","model","attr","cells","filter","data","onValue","toUpperCase","timestamp","lastUpdated","dispose","isUndefined","expanded","window","parser","parse","replace","isString","test","result","uniqBy","forEach","asEventStream","event","elementid","target","map","user_id","userId","socket","emit","addCells","setSpreadSheet","CellFactory","Cell","this","Bus","prototype","getNewCell","SpreadSheetFactory","SpreadSheet","find","isArray","Array","apply","addCell","removeCellsById","ids","remove","removeCellById","getSpreadSheet","io","connect","on","fromBinder","sink"],"mappings":"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","file":"spreadsheet.js","sourcesContent":["/* eslint-disable */\nvar _ = _;\nvar Bacon = Bacon;\n/* eslint-enable */\n\n/*\n * CellFactory\n */\nvar CellFactory = (function () {\n\t/*\n\t * Constructor\n\t *\n\t * param {Object} json object containing cell data\n\t */\n\tfunction Cell(data) {\n\t\tthis.id = data.id;\n\t\tthis.element = data.element;\n\t\tthis.value = 0;\n\t\tthis.expanded = '0';\n\t\tthis.lastUpdated = 0;\n\t\tthis.dispose = null;\n\t\tthis.bus = new Bacon.Bus();\n\t}\n\n\t/*\n\t * pusher\n\t *\n\t * Pushes the current value to all subscribers.\n\t *\n\t */\n\tCell.prototype.pusher = function () {\n\t\tthis.bus.push(this.value);\n\t};\n\n\treturn {\n\t\tgetNewCell: function (data) {\n\t\t\treturn new Cell(data);\n\t\t}\n\t};\n})();\n\n/*\n * SpreadSheetFactory\n */\nvar SpreadSheetFactory = (function () {\n\t/*\n\t * Constructor\n\t *\n\t * param {Array} optional array containing cell data.\n\t */\n\tfunction SpreadSheet(cells) {\n\t\tthis.cells = [];\n\t\tthis.addCells(cells);\n\t}\n\n\t/*\n\t * getCellById\n\t *\n\t * Returns the the first cell taht match the id\n\t * or returns undefined.\n\t *\n\t * param {string} id of cell\n\t * return {Cell}\n\t */\n\tSpreadSheet.prototype.getCellById = function (id) {\n\t\treturn _.find(this.cells, {\n\t\t\tid: id\n\t\t});\n\t};\n\n\t/*\n\t * addCells\n\t *\n\t * Accepts an array of json objects. A collection of\n\t * Cell objects are create using the json objects.\n\t * The cells are added to collection of spreadsheet\n\t * cells.\n\t *\n\t * param {Array} an array of json objects\n\t */\n\tSpreadSheet.prototype.addCells = function (cells) {\n\t\tcells = _.isArray(cells) ? cells : [];\n\t\tcells = cells.map(function (data) {\n\t\t\treturn CellFactory.getNewCell(data);\n\t\t});\n\t\tArray.prototype.push.apply(this.cells, cells);\n\t};\n\n\tSpreadSheet.prototype.addCell = function (data) {\n\t\tthis.cells.push(CellFactory.getNewCell(data));\n\t};\n\n\t/*\n\t * removeCellsById\n\t *\n\t * Accepts a list of cell ids. Cells matching each\n\t * are removed one at a time from the collection\n\t * of spreatsheet cells.\n\t *\n\t * param {Array} a list of ids to remove\n\t */\n\tSpreadSheet.prototype.removeCellsById = function (ids) {\n\t\tids = _.isArray(ids) ? ids : [];\n\t\t_.forEach(ids, function (id) {\n\t\t\t_.remove(this.cells, function (cell) {\n\t\t\t\treturn cell.id === id;\n\t\t\t});\n\t\t});\n\t};\n\n\t/*\n\t * removeCellById\n\t *\n\t * Accepts an id of a cell that needs to be removed.\n\t * Cells that match the id are removed one at a time\n\t * from the collection of spreatsheet cells.\n\t *\n\t * param {String} id the id of the cell to be removed\n\t */\n\tSpreadSheet.prototype.removeCellById = function (id) {\n\t\t_.remove(this.cells, function (cell) {\n\t\t\treturn cell.id === id;\n\t\t});\n\t};\n\n\treturn {\n\t\tgetSpreadSheet: function (cells) {\n\t\t\treturn new SpreadSheet(cells);\n\t\t}\n\t};\n\n})();\n\nvar spreadSheet = SpreadSheetFactory.getSpreadSheet();\n\nfunction contrainValue(value, min, max) {\n\tmin = min || 0;\n\tmax = max || 10;\n\tvalue = _.isFinite(value) ? value : 1;\n\tvalue = Math.max(min, value);\n\tvalue = Math.min(max, value);\n\treturn value;\n}\n\n/*\n * drawSpreadSheet\n *\n * param {int} width\n * param {int} height\n * return void\n */\nfunction drawSpreadSheet(width, height) {\n\twidth = contrainValue(width, 1, 27);\n\theight = contrainValue(height, 1, 20);\n\n\tvar table = document.querySelector(\"table\");\n\n\tfor (var i = 0; i < height; i++) {\n\t\tvar row = table.insertRow(-1);\n\t\tfor (var j = 0; j < width; j++) {\n\t\t\tvar letter = String.fromCharCode(\"A\".charCodeAt(0) + j - 1);\n\t\t\trow.insertCell(-1)\n\t\t\t\t.innerHTML = i && j ? \"<input id='\" + letter + i +\n\t\t\t\t\"' class='spreadsheet-cell' />\" :\n\t\t\t\ti || letter;\n\t\t}\n\t}\n}\n\ndrawSpreadSheet(10, 10);\n\nvar INPUTS = $('.spreadsheet-cell'); //get all inputs\nvar cells = [];\n\nfunction processElements(socketUpdate, socketMessage) {\n\tfunction add(a, b) {\n\t\treturn a + b;\n\t}\n\n\tfunction minus(a, b) {\n\t\treturn a - b;\n\t}\n\n\tfunction multiply(a, b) {\n\t\treturn a * b;\n\t}\n\n\tfunction divide(a, b) {\n\t\tif (b === 0) {\n\t\t\treturn 0;\n\t\t}\n\t\treturn a / b;\n\t}\n\n\tfunction power(a, b) {\n\t\tconsole.log('a ^ b:', a, b);\n\t\treturn Math.pow(a, b);\n\t}\n\n\tfunction fetchAndCombine(token, combiner, pushers) {\n\t\tvar right = '';\n\t\tvar left = calculate(token.left, pushers);\n\n\t\tif (token.right) {\n\t\t\tright = calculate(token.right, pushers);\n\t\t} else {\n\t\t\tright = Bacon.constant(0);\n\t\t}\n\t\treturn left.combine(right, combiner);\n\t}\n\n\tfunction calculate(token, pushers) {\n\t\tvar left = 0;\n\t\tvar right = 0;\n\t\tvar value = 0;\n\n\t\tif (token.type === 'number') {\n\t\t\tvalue = Bacon.constant(parseFloat(token.token));\n\t\t} else if (token.type === 'cellname') {\n\t\t\tvalue = spreadSheet.getCellById(token.token);\n\t\t\tpushers.push(value);\n\t\t\tvalue = value.bus;\n\t\t} else if (token.type === 'unary') {\n\t\t\tright = calculate(token.right, pushers);\n\t\t\tif (token.token === '+') {\n\t\t\t\tvalue = right;\n\t\t\t} else {\n\t\t\t\tleft = Bacon.constant(0);\n\t\t\t\tvalue = left.combine(right, minus);\n\t\t\t}\n\t\t} else if (token.type === \"leftparen\") {\n\t\t\tleft = calculate(token.left, pushers);\n\t\t\tright = token.right;\n\t\t\tif (right.type === 'rightparen') {\n\t\t\t\tvalue = left;\n\t\t\t}\n\t\t} else if (token.type === 'operator') {\n\n\t\t\tswitch (token.token) {\n\t\t\tcase '+':\n\t\t\t\tvalue = fetchAndCombine(token, add, pushers);\n\t\t\t\tbreak;\n\t\t\tcase '-':\n\t\t\t\tvalue = fetchAndCombine(token, minus, pushers);\n\t\t\t\tbreak;\n\t\t\tcase '*':\n\t\t\t\tvalue = fetchAndCombine(token, multiply, pushers);\n\t\t\t\tbreak;\n\t\t\tcase '/':\n\t\t\t\tvalue = fetchAndCombine(token, divide, pushers);\n\t\t\t\tbreak;\n\t\t\tcase '^':\n\t\t\t\tvalue = fetchAndCombine(token, power, pushers);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\treturn value;\n\t}\n\n\tfunction updateCell(cell, element, value) {\n\t\tcell.value = value;\n\t\tif (element.is(':focus')) {\n\t\t\telement.val(cell.formula);\n\t\t} else {\n\t\t\telement.val(cell.value);\n\t\t}\n\t\tlocalStorage[cell.id] = cell.formula;\n\t\t//console.log('cell:', cell.id, cell.value);\n\t\tcell.pusher();\n\t}\n\n\tINPUTS.each(function (index, elem) {\n\t\tvar element = $(elem);\n\t\tvar model = {\n\t\t\telement: element,\n\t\t\tid: element.attr('id')\n\t\t};\n\t\tvar pushers = [];\n\n\t\tcells.push(model);\n\n\t\tsocketUpdate.filter(function (data) {\n\t\t\t\treturn data.element === model.id;\n\t\t\t})\n\t\t\t.onValue(function (data) {\n\t\t\t\tvar cell = spreadSheet.getCellById(data.element);\n\t\t\t\tvar value = data.formula.toUpperCase();\n\n\t\t\t\tif (data.timestamp > cell.lastUpdated) {\n\t\t\t\t\tpushers = [];\n\t\t\t\t\tcell.formula = value;\n\t\t\t\t\tif (cell.dispose) {\n\t\t\t\t\t\tcell.dispose();\n\t\t\t\t\t}\n\t\t\t\t\tcell.dispose = null;\n\t\t\t\t\tif (_.isUndefined(value) || value === '') {\n\t\t\t\t\t\tupdateCell(cell, element, 0);\n\t\t\t\t\t\tcell.expanded = '0';\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvalue = window.parser.parse(value.replace('=', ''), cell.id);\n\t\t\t\t\t\tif (_.isString(value) && /ERROR/ig.test(value)) {\n\t\t\t\t\t\t\tupdateCell(cell, element, value);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tcell.dispose = calculate(value, pushers)\n\t\t\t\t\t\t\t\t.onValue(function (result) {\n\t\t\t\t\t\t\t\t\tupdateCell(cell, element, result);\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\tpushers = _.uniqBy(pushers, function (cell) {\n\t\t\t\t\t\t\t\treturn cell.id;\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t_.forEach(pushers, function (cell) {\n\t\t\t\t\t\t\t\tcell.pusher();\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tconsole.log('server update rejected:', data);\n\t\t\t\t}\n\t\t\t});\n\n\t\telement.asEventStream('focus')\n\t\t\t.onValue(function (event) {\n\t\t\t\tvar elementid = event.target.id;\n\t\t\t\tvar cell = spreadSheet.getCellById(elementid);\n\t\t\t\tvar value = cell.formula;\n\t\t\t\telement.val(value);\n\t\t\t});\n\n\t\telement.asEventStream('blur')\n\t\t\t.map(function (event) {\n\t\t\t\tvar elementid = event.target.id;\n\t\t\t\tvar formula = event.target.value;\n\n\t\t\t\treturn {\n\t\t\t\t\telement: elementid,\n\t\t\t\t\tformula: formula,\n\t\t\t\t\tuser_id: userId\n\t\t\t\t};\n\t\t\t})\n\t\t\t.onValue(function (data) {\n\t\t\t\tsocket.emit('write', data);\n\t\t\t});\n\t});\n\n\tspreadSheet.addCells(cells);\n\twindow.parser.setSpreadSheet(spreadSheet);\n\n\tsocketUpdate.onValue(function (data) {\n\t\tconsole.log('update:', data);\n\t});\n\t/*\n\t\tsocketMessage.onValue(function (data) {\n\t\t\tconsole.log('message:', data);\n\t\t});*/\n}\n\nvar userId;\n/* eslint-disable */\nvar socket = io.connect('http://localhost:5000');\n/* eslint-enable */\n_.forEach([1, 2], function (value) {\n\tconsole.log('number:', value);\n});\nsocket.on('connect', function (data) {\n\tsocket.emit('join', 'Hello World from client');\n\n\tsocket.on('userid', function (data) {\n\t\tuserId = data;\n\t});\n\n\tvar socketUpdate = Bacon.fromBinder(function (sink) {\n\t\tsocket.on('update', function (data) {\n\t\t\tsink(data);\n\t\t});\n\t});\n\t/*\n\t\tvar socketMessage = Bacon.fromBinder(function (sink) {\n\t\t\tsocket.on('messages', function (data) {\n\t\t\t\tsink(data);\n\t\t\t});\n\t\t});*/\n\n\tprocessElements(socketUpdate);\n});\n"],"sourceRoot":"/source/"}
>>>>>>> master
